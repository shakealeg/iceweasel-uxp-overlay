From 73db3686ea16b4b27c0d577e852a45eea43a3e0c Mon Sep 17 00:00:00 2001
From: Gaming4JC <g4jc@hyperbola.info>
Date: Sat, 3 Jun 2023 21:44:12 -0400
Subject: [PATCH 6/7] Uplift enable-proxy-bypass-protection flag

---
 build/moz.configure/old.configure       |  1 +
 extensions/gio/nsGIOProtocolHandler.cpp | 10 ++++++++--
 netwerk/base/Tickler.h                  |  2 ++
 old-configure.in                        | 13 +++++++++++++
 toolkit/profile/nsProfileLock.cpp       |  9 +++++++++
 widget/gtk/nsFilePicker.cpp             |  4 ++++
 6 files changed, 37 insertions(+), 2 deletions(-)

diff --git a/build/moz.configure/old.configure b/build/moz.configure/old.configure
index 492bb94d66..cd86149d36 100644
--- a/build/moz.configure/old.configure
+++ b/build/moz.configure/old.configure
@@ -219,6 +219,7 @@ def old_configure_options(*options):
     '--enable-precompiled-startupcache',
     '--enable-pref-extensions',
     '--enable-private-build',
+    '--enable-proxy-bypass-protection',
     '--enable-pulseaudio',
     '--enable-sndio',
     '--enable-raw',
diff --git a/extensions/gio/nsGIOProtocolHandler.cpp b/extensions/gio/nsGIOProtocolHandler.cpp
index 5a2418d94c..0e9d6961bd 100644
--- a/extensions/gio/nsGIOProtocolHandler.cpp
+++ b/extensions/gio/nsGIOProtocolHandler.cpp
@@ -928,9 +928,15 @@ nsGIOProtocolHandler::InitSupportedProtocolsPref(nsIPrefBranch *prefs)
   if (NS_SUCCEEDED(rv)) {
     mSupportedProtocols.StripWhitespace();
     ToLowerCase(mSupportedProtocols);
+  } else {
+    mSupportedProtocols.AssignLiteral(
+#ifdef MOZ_PROXY_BYPASS_PROTECTION
+      ""           // use none
+#else
+      "smb:,sftp:" // use defaults
+#endif
+    );
   }
-  else
-    mSupportedProtocols.AssignLiteral("smb:,sftp:"); // use defaults
 
   LOG(("gio: supported protocols \"%s\"\n", mSupportedProtocols.get()));
 }
diff --git a/netwerk/base/Tickler.h b/netwerk/base/Tickler.h
index e38f0d99c7..3c37250c99 100644
--- a/netwerk/base/Tickler.h
+++ b/netwerk/base/Tickler.h
@@ -31,7 +31,9 @@
 #include "nsISupports.h"
 #include <stdint.h>
 
+#if !defined(MOZ_PROXY_BYPASS_PROTECTION)
 #ifdef MOZ_USE_WIFI_TICKLER
+#endif
 #include "mozilla/Mutex.h"
 #include "mozilla/TimeStamp.h"
 #include "nsAutoPtr.h"
diff --git a/old-configure.in b/old-configure.in
index 59a11f4fed..9245dc6878 100644
--- a/old-configure.in
+++ b/old-configure.in
@@ -2040,6 +2040,7 @@ MOZ_JETPACK=1
 MOZ_DEVTOOLS_SERVER=1
 MOZ_DEVTOOLS=
 MOZ_PLACES=1
+MOZ_PROXY_BYPASS_PROTECTION=
 MOZ_SECURITY_SQLSTORE=
 MOZ_SERVICES_SYNC=1
 MOZ_USERINFO=1
@@ -4590,6 +4591,18 @@ AC_SUBST_LIST(MOZ_CAIRO_LIBS)
 AC_SUBST_LIST(MOZ_CAIRO_OSLIBS)
 AC_SUBST(MOZ_TREE_PIXMAN)
 
+dnl ========================================================
+dnl enable proxy bypass protection
+dnl ========================================================
+MOZ_ARG_ENABLE_BOOL(proxy-bypass-protection,
+[  --enable-proxy-bypass-protection      Enable proxy bypass protection],
+    MOZ_PROXY_BYPASS_PROTECTION=1,
+    MOZ_PROXY_BYPASS_PROTECTION=)
+if test -n "$MOZ_PROXY_BYPASS_PROTECTION"; then
+  AC_DEFINE(MOZ_PROXY_BYPASS_PROTECTION)
+fi
+AC_SUBST(MOZ_PROXY_BYPASS_PROTECTION)
+
 dnl ========================================================
 dnl necko configuration options
 dnl ========================================================
diff --git a/toolkit/profile/nsProfileLock.cpp b/toolkit/profile/nsProfileLock.cpp
index d75b6082d3..8400c26dcb 100644
--- a/toolkit/profile/nsProfileLock.cpp
+++ b/toolkit/profile/nsProfileLock.cpp
@@ -316,6 +316,14 @@ nsresult nsProfileLock::LockWithSymlink(nsIFile *aLockFile, bool aHaveFcntlLock)
     struct in_addr inaddr;
     inaddr.s_addr = htonl(INADDR_LOOPBACK);
 
+    // Avoid a DNS lookup here with --enable-proxy-bypass-protection.
+    // Instead, always use 127.0.0.1 for the IP address portion
+    // of the lock signature, which may cause the browser to refuse to
+    // start in the rare event that all of the following conditions are met:
+    //   1. The browser profile is on a network file system.
+    //   2. The file system does not support fcntl() locking.
+    //   3. The browser is run from two different computers at the same time.
+#ifndef MOZ_PROXY_BYPASS_PROTECTION
     char hostname[256];
     PRStatus status = PR_GetSystemInfo(PR_SI_HOSTNAME, hostname, sizeof hostname);
     if (status == PR_SUCCESS)
@@ -326,6 +334,7 @@ nsresult nsProfileLock::LockWithSymlink(nsIFile *aLockFile, bool aHaveFcntlLock)
         if (status == PR_SUCCESS)
             memcpy(&inaddr, hostent.h_addr, sizeof inaddr);
     }
+#endif
 
     char *signature =
         PR_smprintf("%s:%s%lu", inet_ntoa(inaddr), aHaveFcntlLock ? "+" : "",
diff --git a/widget/gtk/nsFilePicker.cpp b/widget/gtk/nsFilePicker.cpp
index 05d8bb0f0b..ff0034a1a6 100644
--- a/widget/gtk/nsFilePicker.cpp
+++ b/widget/gtk/nsFilePicker.cpp
@@ -395,9 +395,13 @@ nsFilePicker::Open(nsIFilePickerShownCallback *aCallback)
   }
 
   void *file_chooser = GtkFileChooserNew(title.get(), parent_widget, action, accept_button);
+  // If we have --enable-proxy-bypass-protection, then don't allow
+  // remote URLs to be used.
+#ifndef MOZ_PROXY_BYPASS_PROTECTION
   if (mAllowURLs) {
     gtk_file_chooser_set_local_only(GTK_FILE_CHOOSER(file_chooser), FALSE);
   }
+#endif
 
   if (action == GTK_FILE_CHOOSER_ACTION_OPEN || action == GTK_FILE_CHOOSER_ACTION_SAVE) {
     GtkWidget *img_preview = gtk_image_new();
-- 
2.41.0

